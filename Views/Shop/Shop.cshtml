@model Ecom.ViewModel.ShopView
@{
    ViewData["Title"] = "Products";
    int totalPages = (int)Math.Ceiling((double)Model.TotalProducts / 12);
}
<div class="row">
    <div class="col d-flex justify-content-end">
        <div class="navbar">
            <form method="get" class="d-flex" role="search" action="@Url.Action("Search", "Shop")">
                <input name="searchString" class="form-control me-2" type="search" placeholder="Search" aria-label="Search"
                       value="@(ViewContext.HttpContext.Request.Query["searchString"].ToString())" />
                <button class="btn btn-outline-success" type="submit">Search</button>
            </form>
        </div>
    </div>
        <div class="row">
            <p class="h3"> All Products</p>
        </div>
    <div class="row">
        @foreach (var product in Model.Products)
        {
            if (product != null)
            {
                <div class="col-md-3 mb-3">
                    <div class="card shadow h-100" data-url="@Url.Action("Details", "Products", new { id = product.Id })" onclick="window.location=this.dataset.url">
                        <img src="@product.ImageUrl" class="card-img-top" alt="...">
                        <div class="card-body">
                            <div class="row d-flex">
                                <div class="col">
                                    <h5 class="card-title">@product.Name</h5>
                                    <p class="card-text">Rs @product.Price/-</p>
                                </div>
                                <div class="col">
                                    <form method="post">
                                        <input type="hidden" name="productId" value="@Html.ValueFor(model => product.Id)" />
                                        <button id="add-to-cart-btn" type="button" class="btn btn-outline-primary add-to-cart-btn" data-product-id="@product.Id">
                                            <iconify-icon class="cart" icon="solar:cart-line-duotone" noobserver></iconify-icon>
                                        </button>
                                    </form>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        }
    </div>
        <div class="row">
            <div class="col offset-10">
                <nav>
                    <ul class="pagination">
                        @if (Model.PageNumber > 1)
                        {
                            <li class="page-item">
                                <a class="page-link" href="@Url.Action("Shop", new { pageNumber = Model.PageNumber - 1 })">Previous</a>
                            </li>
                        }
                        @for (int i = 1; i <= totalPages; i++)
                        {
                            <li class="page-item @(Model.PageNumber == i ? "active" : "")">
                                <a class="page-link" href="@Url.Action("Shop", new { pageNumber = i })">@i</a>
                            </li>
                        }
                        @if ((Model.TotalProducts / 12) >= Model.PageNumber)
                        {
                            <li class="page-item">
                                <a class="page-link" href="@Url.Action("Shop", new { pageNumber = Model.PageNumber + 1 })">Next</a>
                            </li>
                        }
                    </ul>
                </nav>
            </div>
        </div>
    </div>
</div>